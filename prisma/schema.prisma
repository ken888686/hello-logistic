generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  NEW
  PROCESSING
  CONFIRMED
  SHIPPING
  SHIPPED
  DELIVERING
  DELIVERED
  PENDING
  CANCELED
}

enum PaymentMethod {
  CREDIT_CARD
  BANK_TRANSFER
  PAYPAY
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum ShipmentStatus {
  PROCESSING
  SHIPPED
  DELIVERED
}

enum DiscountType {
  PERCENTAGE
  FIXED_AMOUNT
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  email         String    @unique
  emailVerified Boolean   @default(false)
  enabled       Boolean   @default(true)
  role          UserRole  @default(CUSTOMER)
  createdAt     DateTime  @default(now()) @db.Timestamptz
  updatedAt     DateTime  @updatedAt @db.Timestamptz
  customer      Customer?
}

model Customer {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  displayName String?
  firstName   String
  lastName    String
  photoUrl    String?
  phone       String?
  createdAt   DateTime  @default(now()) @db.Timestamptz
  updatedAt   DateTime  @updatedAt @db.Timestamptz
  address     Address[]
  orders      Order[]
  cart        Cart?

  user User @relation(fields: [userId], references: [id])
}

model Address {
  id         Int      @id @default(autoincrement())
  customerId Int
  postalCode String
  country    String
  city       String
  district   String
  street     String
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now()) @db.Timestamptz
  updatedAt  DateTime @updatedAt @db.Timestamptz

  customer Customer @relation(fields: [customerId], references: [id])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal     @db.Decimal(10, 0)
  categoryId  Int
  discountId  Int?
  createdAt   DateTime    @default(now()) @db.Timestamptz
  updatedAt   DateTime    @updatedAt @db.Timestamptz
  inventory   Inventory?
  orderItems  OrderItem[]
  cartItem    CartItem[]

  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now()) @db.Timestamptz
  updatedAt   DateTime  @updatedAt @db.Timestamptz
  product     Product[]
}

model Inventory {
  id        Int      @id @default(autoincrement())
  productId Int      @unique
  quantity  Int      @default(0)
  location  String?
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @updatedAt @db.Timestamptz

  product Product @relation(fields: [productId], references: [id])
}

model Order {
  id          Int         @id @default(autoincrement())
  customerId  Int
  discountId  Int?
  totalAmount Decimal     @db.Decimal(10, 0)
  status      OrderStatus @default(PENDING)
  orderItem   OrderItem[]
  payment     Payment?
  shipment    Shipment?
  createdAt   DateTime    @default(now()) @db.Timestamptz
  updatedAt   DateTime    @updatedAt @db.Timestamptz

  customer Customer  @relation(fields: [customerId], references: [id])
  discount Discount? @relation(fields: [discountId], references: [id])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int      @unique
  quantity  Int      @default(1)
  price     Decimal  @db.Decimal(10, 0)
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @updatedAt @db.Timestamptz

  product Product @relation(fields: [productId], references: [id])
  order   Order   @relation(fields: [orderId], references: [id])
}

model Payment {
  id            Int           @id @default(autoincrement())
  orderId       Int           @unique
  amount        Decimal       @db.Decimal(10, 2)
  paymentMethod PaymentMethod
  status        PaymentStatus @default(PENDING)
  transactionId String?
  createdAt     DateTime      @default(now()) @db.Timestamptz
  updatedAt     DateTime      @updatedAt @db.Timestamptz

  order Order @relation(fields: [orderId], references: [id])
}

model Shipment {
  id             Int            @id @default(autoincrement())
  orderId        Int            @unique
  trackingNumber String?
  carrier        String?
  status         ShipmentStatus @default(PROCESSING)
  createdAt      DateTime       @default(now()) @db.Timestamptz
  updatedAt      DateTime       @updatedAt @db.Timestamptz

  order Order @relation(fields: [orderId], references: [id])
}

model Cart {
  id         Int        @id @default(autoincrement())
  customerId Int        @unique
  items      CartItem[]
  createdAt  DateTime   @default(now()) @db.Timestamptz
  updatedAt  DateTime   @updatedAt @db.Timestamptz

  customer Customer @relation(fields: [customerId], references: [id])
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int?
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now()) @db.Timestamptz
  updatedAt DateTime @updatedAt @db.Timestamptz

  cart    Cart?   @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

model Discount {
  id           Int          @id @default(autoincrement())
  name         String
  code         String       @unique
  description  String?
  discountType DiscountType
  value        Decimal      @db.Decimal(5, 2)
  startDate    DateTime     @db.Timestamptz
  endDate      DateTime     @db.Timestamptz
  isActive     Boolean      @default(false)
  orders       Order[]
  createdAt    DateTime     @default(now()) @db.Timestamptz
  updatedAt    DateTime     @updatedAt @db.Timestamptz
}
